include "TriggerLibs/NativeLib"
include "LibCOOC"
include "LibCOMI"

include "Lib35C394B7_h"

//--------------------------------------------------------------------------------------------------
// Library: Karax Ex
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void lib35C394B7_InitLibraries () {
    libNtve_InitVariables();
    libCOOC_InitVariables();
    libCOMI_InitVariables();
}

// Custom Script
//--------------------------------------------------------------------------------------------------
// Custom Script: startingTechOverride
//--------------------------------------------------------------------------------------------------
void lib35C394B7_cf_Init(){
  // this is run before override trigger variable is initialized, so we use TriggerCreate
  libCOMI_gt_CM_StartingTech = TriggerCreate("lib35C394B7_gt_ov_StartingTech_Func");
}

void lib35C394B7_InitCustomScript () {
    lib35C394B7_cf_Init();
}

// Functions
void lib35C394B7_gf_MasteryKaraxStructureCostList (int lp_player) {
    // Variable Declarations
    int lv_upgradeCount;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    lv_upgradeCount = TechTreeUpgradeCount(lp_player, "MasteryKaraxStructureCost", c_techCountCompleteOnly);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("SolarForge", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Nexus", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Assimilator", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Gateway", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("WarpGate", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Forge", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Pylon", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("ShieldBattery", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("CyberneticsCore", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("PhotonCannon", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("KhaydarinMonolith", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("TwilightCouncil", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("Stargate", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("RoboticsFacility", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("RoboticsBay", lp_player, lv_upgradeCount);
    lib35C394B7_gf_MasteryKaraxStructureCostReduction("FleetBeacon", lp_player, lv_upgradeCount);
}

void lib35C394B7_gf_MasteryKaraxStructureCostReduction (string lp_unitType, int lp_player, int lp_upgradeCount) {
    // Variable Declarations
    fixed lv_unitCostOriginal;
    fixed lv_UnitVespeneCostReductionPerPoint;
    fixed lv_unitCostReduction;
    int lv_UnitVespeneCostNew;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_UnitVespeneCostReductionPerPoint = 100.0;

    // Implementation
    lv_unitCostOriginal = IntToFixed(CatalogFieldValueGetAsInt(c_gameCatalogUnit, lp_unitType, "CostResource[" + IntToString(1) + "]", lp_player));
    lv_unitCostReduction = (IntToFixed(lp_upgradeCount) * lv_unitCostOriginal);
    lv_unitCostReduction = (lv_unitCostReduction / lv_UnitVespeneCostReductionPerPoint);
    lv_UnitVespeneCostNew = FixedToInt((lv_unitCostOriginal - lv_unitCostReduction));
    CatalogFieldValueSet(c_gameCatalogUnit, lp_unitType, "CostResource[" + IntToString(1) + "]", lp_player, IntToString(lv_UnitVespeneCostNew));
    lv_unitCostOriginal = IntToFixed(CatalogFieldValueGetAsInt(c_gameCatalogUnit, lp_unitType, "CostResource[" + IntToString(0) + "]", lp_player));
    lv_unitCostReduction = (IntToFixed(lp_upgradeCount) * lv_unitCostOriginal);
    lv_unitCostReduction = (lv_unitCostReduction / lv_UnitVespeneCostReductionPerPoint);
    lv_UnitVespeneCostNew = FixedToInt((lv_unitCostOriginal - lv_unitCostReduction));
    CatalogFieldValueSet(c_gameCatalogUnit, lp_unitType, "CostResource[" + IntToString(0) + "]", lp_player, IntToString(lv_UnitVespeneCostNew));
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: ov_StartingTech
//--------------------------------------------------------------------------------------------------
bool lib35C394B7_gt_ov_StartingTech_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_itPlayer;
    playergroup lv_itPlayerGroup;

    // Automatic Variable Declarations
    playergroup autoFCF97A8B_playerPool;
    int autoFCF97A8B_itPlayer;
    playergroup autoFCF97A8B_itTestPool;
    playergroup auto2941EB7B_g;

    // Variable Initialization
    lv_itPlayerGroup = PlayerGroupEmpty();

    // Actions
    if (!runActions) {
        return true;
    }

    autoFCF97A8B_playerPool = PlayerGroupAll();
    autoFCF97A8B_itPlayer = 0;
    autoFCF97A8B_itTestPool=null;
    while (PlayerGroupCount(autoFCF97A8B_playerPool)) {
        autoFCF97A8B_itPlayer = PlayerGroupPlayer(autoFCF97A8B_playerPool, 1);
        autoFCF97A8B_itTestPool = libCOOC_gf_MutualAlliedCommandersofPlayerCoutInactiveAndSelf(autoFCF97A8B_itPlayer);
        PlayerGroupRemove(autoFCF97A8B_playerPool, autoFCF97A8B_itPlayer);
        libNtve_gf_RemovePlayerGroupFromPlayerGroup(libNtve_gf_AlliesEnemiesOfPlayerCountInactiveAndSelf(libNtve_ge_PlayerRelation_AllyMutual,autoFCF97A8B_itPlayer), autoFCF97A8B_playerPool);
        if(PlayerGroupCount(autoFCF97A8B_itTestPool)){
            lv_itPlayerGroup = autoFCF97A8B_itTestPool;
            libNtve_gf_SetAllianceAspectForPlayerGroup(lv_itPlayerGroup, c_allianceIdPower, true);
        }
    }
    auto2941EB7B_g = libCOOC_gf_CommanderPlayers();
    lv_itPlayer = -1;
    while (true) {
        lv_itPlayer = PlayerGroupNextPlayer(auto2941EB7B_g, lv_itPlayer);
        if (lv_itPlayer < 0) { break; }
        libCOMI_gf_CM_StartingTechForHumanPlayer(lv_itPlayer);
        if ((TechTreeUpgradeCount(lv_itPlayer, "MasteryKaraxStructureCost", c_techCountCompleteOnly) >= 1)) {
            lib35C394B7_gf_MasteryKaraxStructureCostList(lv_itPlayer);
        }

        libCOMI_gf_SetWorkerRallyPointsPlayersNexuses(lv_itPlayer);
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void lib35C394B7_gt_ov_StartingTech_Init () {
    lib35C394B7_gt_ov_StartingTech = TriggerCreate("lib35C394B7_gt_ov_StartingTech_Func");
}

void lib35C394B7_InitTriggers () {
    lib35C394B7_gt_ov_StartingTech_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool lib35C394B7_InitLib_completed = false;

void lib35C394B7_InitLib () {
    if (lib35C394B7_InitLib_completed) {
        return;
    }

    lib35C394B7_InitLib_completed = true;

    lib35C394B7_InitLibraries();
    lib35C394B7_InitCustomScript();
    lib35C394B7_InitTriggers();
}

